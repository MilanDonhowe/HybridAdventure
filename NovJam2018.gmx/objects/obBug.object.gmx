<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spBug</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// how big to draw the sprite.
size = 1;

image_xscale = size;
image_yscale = size;

// health points (character destroys itself when hp is not greater than 0).
hp = 1;

// how fast the character should move.
spd = 1;

// how long to wait in between firing shots.


cooldown = 400;

// boolean to determine if the bug can fire.
fire = false;

randomize();
alarm[0] = random_range(cooldown, cooldown+100);


// speed in which the sprite is animated.
image_speed = 0.1;

// floating code.
anchorY = y;
frequency = 0.1;
amplitude = 1;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// let the bug fire again
fire = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(obCameraFollow)){

// Make obBug look towards player

if (obCameraFollow.x &lt; x) {
    image_xscale = -size;
} else {
    image_xscale = size;
}

// Take damage

if (place_meeting(x, y, obPunch)) hp -= 1;
if (place_meeting(x, y, obBullet)) {
    with(obBullet){
        instance_destroy();
    }
    global.ball = false;
    hp -= 1;
}


if not (hp &gt; 0){
    audio_play_sound(sndEnemyDamage, 1, 0);
    instance_create(x, y, ob500);
    instance_destroy();
}


// Float like a G

y = anchorY + sin(timer*frequency)*amplitude;
timer++;


// movement 

if (x &lt; obCameraFollow.x-64){
    if (!place_meeting(x+spd, y, obWall) and !place_meeting(x, y+spd, obBug)){
        x += spd;
    }
} else {
    if (x &gt; obCameraFollow.x+64){
        if (!place_meeting(x-spd, y, obWall) and !place_meeting(x-spd, y, obBug)){
            x -= spd;
        }
    }
}

// create bullets

if (fire == true){

    fire = false;
    instance_create(x, y, obEvilBullet);
    alarm[0] = cooldown;

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
