<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spPaddle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obCameraFollow</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = 4;

delay = 0;

global.ball = false;




if( room = rmLvl0 ){
    instance_create(x-32, y-64, obKeysUpDown);
    instance_create(x-64, y, obSpaceBar);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = keyboard_check(ord('W')) or keyboard_check(vk_up);
down = keyboard_check(ord('S')) or keyboard_check(vk_down);
left = keyboard_check(ord('A')) or keyboard_check(vk_left);
right = keyboard_check(ord('D')) or keyboard_check(vk_right);


change = keyboard_check_pressed(vk_space);


if (up) {
    if(!place_meeting(x, y-spd, obWall)){
        y -= spd;
    }
}
if (down) {
    if(!place_meeting(x,y+spd, obWall)){
        y += spd;
    }
}

if (change) {
    audio_play_sound(sndLaunchPad, 3, 0);
    instance_create(x, y, obTransPaddle);
    instance_change(obPlayer, false);
}

if(room != rmLvlBOSS){

    if (right) {
        if (global.ball == false){
            global.ball = true;
            instance_create(x+sprite_width, y, obBulletRight);
        }
    }

    if (left) {
        if (global.ball == false){
            global.ball = true;
            instance_create(x-sprite_width, y, obBulletLeft);
        }
    }

}

if (delay &gt; 0) delay -= 1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
switch(hp){
    case 6:
        draw_sprite(spHP, 0, view_wview[0]/8, view_hview[0]/6);
        break;
    case 5:
        draw_sprite(spHP, 1, view_wview[0]/8, view_hview[0]/6);
        break;
    case 4:
        draw_sprite(spHP, 2, view_wview[0]/8, view_hview[0]/6);
        break;
    case 3:
        draw_sprite(spHP, 3, view_wview[0]/8, view_hview[0]/6);
        break;
    case 2:
        draw_sprite(spHP, 4, view_wview[0]/8, view_hview[0]/6);
        break;
    case 1:
        draw_sprite(spHP, 5, view_wview[0]/8, view_hview[0]/6);
        break;
    case 0:
        global.theScore = 0;
        hp = 6;
        instance_change(obPlayer, false);
        room_restart();
        break;


}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
